from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import CallbackContext, MessageHandler as TelegramMessageHandler, Filters

class MessageHandler:
    def __init__(self, category_manager, subscription_handler):
        self.category_manager = category_manager
        self.subscription_handler = subscription_handler
        self.handlers = [
            TelegramMessageHandler(Filters.text & ~Filters.command, self.handle_message)
        ]

    def handle_message(self, update: Update, context: CallbackContext) -> None:
        chat_id = update.effective_chat.id
        message_text = update.message.text

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ–º –ª–∏ –º—ã –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if context.user_data.get('waiting_for_category_name'):
            self.category_manager.add_category(chat_id, message_text)
            del context.user_data['waiting_for_category_name']
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
            keyboard = [
                [InlineKeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data="add_category")],
                [InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data="delete_category_menu")],
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")]
            ]
            
            update.message.reply_text(
                f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{message_text}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n\n"
                "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=InlineKeyboardMarkup(keyboard)
            )
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ–º –ª–∏ –º—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞
        subscription_data = context.user_data.get('waiting_for_subscription')
        if subscription_data:
            if subscription_data['step'] == 'name':
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–Ω—è—Ç–∏–π
                subscription_data['name'] = message_text
                subscription_data['step'] = 'lessons'
                update.message.reply_text(
                    "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–Ω—è—Ç–∏–π –≤ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–µ (—á–∏—Å–ª–æ):",
                    reply_markup=InlineKeyboardMarkup([[
                        InlineKeyboardButton("üîô –û—Ç–º–µ–Ω–∞", callback_data=f"category_{subscription_data['category']}")
                    ]])
                )
            elif subscription_data['step'] == 'lessons':
                try:
                    lessons = int(message_text)
                    if lessons <= 0:
                        raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–Ω—è—Ç–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º")
                    
                    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∞–±–æ–Ω–µ–º–µ–Ω—Ç
                    self.subscription_handler.save_subscription(
                        chat_id,
                        subscription_data['category'],
                        subscription_data['name'],
                        {
                            'total_lessons': lessons,
                            'used_lessons': 0
                        }
                    )
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –º–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                    keyboard = [
                        [InlineKeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç", callback_data=f"subscription_create_{subscription_data['category']}")],
                        [InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç", callback_data=f"subscription_delete_menu_{subscription_data['category']}")],
                        [InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤", callback_data=f"subscription_list_{subscription_data['category']}")],
                        [InlineKeyboardButton("üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
                    ]
                    
                    update.message.reply_text(
                        f"‚úÖ –ê–±–æ–Ω–µ–º–µ–Ω—Ç '{subscription_data['name']}' –Ω–∞ {lessons} –∑–∞–Ω—è—Ç–∏–π —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n"
                        f"üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {subscription_data['category']}\n"
                        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                        reply_markup=InlineKeyboardMarkup(keyboard)
                    )
                    
                    del context.user_data['waiting_for_subscription']
                except ValueError:
                    update.message.reply_text(
                        "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –∑–∞–Ω—è—Ç–∏–π (—Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ).",
                        reply_markup=InlineKeyboardMarkup([[
                            InlineKeyboardButton("üîô –û—Ç–º–µ–Ω–∞", callback_data=f"category_{subscription_data['category']}")
                        ]])
                    ) 